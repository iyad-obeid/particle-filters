clc
clear all
close all

dt = 1e-3;
tmax = 30;
t = (0:dt:tmax-dt)';
nNeurons = 1;

f = 0.25;
s = pi*sin(2*pi*f*t) + pi;


theta_p_start = pi/3*ones(1,nNeurons);      % mean   0 < theta_p < pi
theta_p_end = pi/2*ones(1,nNeurons);        
gamma_start = 20*ones(1, nNeurons);       % amplitude
gamma_end   = 20*ones(1, nNeurons);
beta_start  = 20*ones(1, nNeurons);          % offset
beta_end = 20*ones(1, nNeurons);
gamma = zeros(length(t), nNeurons);
theta_p  = zeros(length(t), nNeurons);
beta = zeros(length(t), nNeurons);

for k = 1:nNeurons
    gamma(:, k) = linspace(gamma_start(1, k), gamma_end(1, k), length(t));
    theta_p(:, k) = linspace(theta_p_start(1, k), theta_p_end(1, k), length(t));
    beta(:, k) = linspace(beta_start(1, k), beta_end(1, k), length(t));
end


lambda = zeros(length(t), nNeurons);

for k = 1:length(t)
    lambda(k,:) = beta(k,:) + gamma(k,:).*cos(s(k,1) - theta_p(k,:));
end

N = poissrnd(lambda*dt);
N = N>0;

clear gamma_end theta_p_end beta_end c k f
save input_data

figure, hist(s.*N(:, 1), 30);


figure, plot(t, s(:, 1), t, theta_p(:, 1), t, s.*N(:, 1), 'ro'), ...
    xlabel('time (s)'), ylabel('\theta_{p}'),...
    xlim([0 tmax]), ylim([0.1 2*pi]), grid on;

s_L = 0:0.01:2*pi;
L =  beta(1,1) + gamma(1,1).*cos(s_L - theta_p(1,1));
figure, plot(s_L, L), xlim([0 2*pi]);


